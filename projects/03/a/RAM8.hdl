// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
	Mux8Way16 (a[0..15]=regouta, b[0..15]=regoutb, c[0..15]=regoutc, d[0..15]=regoutd, e[0..15]=regoute, f[0..15]=regoutf, g[0..15]=regoutg, h[0..15]=regouth, sel[0..2]=address[0..2], out[0..15]=out[0..15]);
	DMux8Way (sel[0..2]=address[0..2], in=load, a=loada, b=loadb, c=loadc, d=loadd, e=loade, f=loadf, g=loadg, h=loadh);
	Register (in[0..15]=in[0..15], load=loada, out[0..15]=regouta);
	Register (in[0..15]=in[0..15], load=loadb, out[0..15]=regoutb);
	Register (in[0..15]=in[0..15], load=loadc, out[0..15]=regoutc);
	Register (in[0..15]=in[0..15], load=loadd, out[0..15]=regoutd);
	Register (in[0..15]=in[0..15], load=loade, out[0..15]=regoute);
	Register (in[0..15]=in[0..15], load=loadf, out[0..15]=regoutf);
	Register (in[0..15]=in[0..15], load=loadg, out[0..15]=regoutg);
	Register (in[0..15]=in[0..15], load=loadh, out[0..15]=regouth);

    // Put your code here:
}